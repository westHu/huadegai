<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <description>spring-datasource-configuration</description>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- Connection Pooling Info -->
        <property name="filters" value="wall,stat" />
        <property name="maxActive" value="${jdbc.pool.maxActive}" />
        <property name="initialSize" value="${jdbc.pool.initialSize}" />
        <property name="maxWait" value="${jdbc.pool.maxWait}" />
        <property name="minIdle" value="${jdbc.pool.minIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${jdbc.pool.maxPoolPreparedStatementPerConnectionSize}" />
        <!--监控信息输出到日志的时间-->
        <property name="timeBetweenLogStatsMillis" value="300000" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
    </bean>

    <!--  MyBatis 配置  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xkeshi.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.xkeshi.entities"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mapper/**DAO.xml"/>
        <property name="plugins">
            <array>
                <!--page interceptor-->
                <bean class="com.xkeshi.interceptors.db.QueryInterceptor" />
            </array>
        </property>
    </bean>

    <!--事务配置-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

    <tx:advice id="txManager" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" />
            <tx:method name="insert*" />
            <tx:method name="delete*" />
            <tx:method name="remove*" />
            <tx:method name="set*" />
            <tx:method name="send*" />
            <tx:method name="batch*" />
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression="execution(* com.xkeshi.services.*.*(..))"/>
        <aop:advisor advice-ref="txManager" pointcut-ref="serviceMethod"/>
    </aop:config>

    <!-- redis配置 -->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean id="MY_BATIS_CACHED_POOL" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.host.name}"/>
        <constructor-arg name="port" value="${redis.host.port}"/>
        <constructor-arg name="database" value="0"/>
        <constructor-arg name="timeout" value="${redis.timeout}"/>
        <constructor-arg name="password" value="${redis.password}"/>
    </bean>-->

</beans>
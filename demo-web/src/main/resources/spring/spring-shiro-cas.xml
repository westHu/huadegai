<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="https://sso-dev.xkeshi.net/login?service=http://demo.com/cas"/>
        <!--登录成功默认跳转页面，不配置则跳转至”/”。
        如果登陆前点击的一个需要登录的页面，则在登录自动跳转到那个需要登录的页面。不跳转到此。-->
        <property name="successUrl" value="http://demo.com/index"/>
        <!--没有权限跳转的链接-->
        <property name="unauthorizedUrl" value="${shiro.unauthorizedUrl}"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="ajaxAuthenticationFilter"/>
                <entry key="url" value-ref="xUrlAuthenticationFilter"/>
                <!-- 添加casFilter到shiroFilter -->
                <entry key="casFilter" value-ref="casFilter"/>
                <entry key="logoutFilter" value-ref="logoutFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /cas = casFilter
                /logout = logoutFilter
                /favicon.ico = anon
                /static/** = anon
                /redirect/login = anon
                /error = anon
                /errors/** = anon
                /401 = anon
                /404 = anon
                /500 = anon
                /503 = anon
                /captcha = anon
                /unauthorize = anon
                /login = anon
                /login/** = anon
                /main/* = authc
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 身份验证过滤器 -->
    <bean id="ajaxAuthenticationFilter" class="com.xkeshi.demo.shiro.DemoFormAuthenticationFilter">
        <property name="usernameParam" value="${shiro.usernameParam}"/>
        <property name="passwordParam" value="${shiro.passwordParam}"/>
        <property name="rememberMeParam" value="${shiro.rememberMeParam}"/>
        <property name="captchaParam" value="${shiro.captchaParam}"/>
    </bean>

    <bean id="xUrlAuthenticationFilter" class="com.xkeshi.demo.shiro.DemoUrlAuthenticationFilter"/>


    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--密码加密方式：md5-->
        <property name="hashAlgorithmName" value="${shiro.encryptName}"/>
        <!--MD5加密次数：2-->
        <property name="hashIterations" value="${shiro.encryptCount}"/>
        <!--hex转码-->
        <property name="storedCredentialsHexEncoded" value="${shiro.encryptHex}"/>
    </bean>

    <!-- Realm实现-->
    <!--<bean id="systemAuthorizingRealm" class="net.xkeshi.permission.shiro.SystemAuthorizingRealm">-->
    <!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
    <!--</bean>-->
    <!--<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">-->
    <bean id="casFilter" class="com.xkeshi.webkits.filter.XkeshiCasFilter">
        <!-- 配置验证错误时的失败页面 -->
        <property name="failureUrl" value="${shiro.failureUrl}"/>
        <property name="successUrl" value="${shiro.successUrl}"/>
    </bean>
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <!-- 配置验证错误时的失败页面 -->
        <property name="redirectUrl" value="https://sso-dev.xkeshi.net/logout?service=http://demo.com/login"/>
    </bean>
    <bean id="casRealm" class="com.xkeshi.demo.shiro.SSOLoginAuthorizingRealm">
        <!-- 认证通过后的默认角色 -->
        <property name="defaultRoles" value="ROLE_USER"/>
        <!-- cas服务端地址前缀 -->
        <property name="casServerUrlPrefix" value="https://sso-dev.xkeshi.net"/>
        <!-- 应用服务地址，用来接收cas服务端票据 -->
        <property name="casService" value="http://demo.com/cas"/>
    </bean>

    <!-- 权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 基于redis登录校验的实现 -->
        <property name="realm" ref="casRealm"/>
        <property name="subjectFactory" ref="casSubjectFactory"/>
        <!-- session 管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->
    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="com.xkeshi.webkits.shiro.RedisSessionDAO">
        <!--redis session过期时间,单位秒-->
        <property name="expire" value="3600"/>
        <!-- 为了避免项目间session key冲突，需要设置单独的keyPrefix -->
        <property name="keyPrefix" value="${shiro.redis.keyPrefix}"/>
    </bean>

    <!-- session管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="${shiro.cookie.sessionId}"/>
        <property name="httpOnly" value="true"/>
        <!--默认关闭浏览器过期，所以下面一行被注释-->
        <!--<property name="maxAge" value="180000"/>-->
        <property name="domain" value="demo.com"/>
    </bean>

    <bean class="com.xkeshi.core.context.ApplicationContextHelper"/>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"></property>
        <property name="arguments" ref="securityManager"></property>
    </bean>
</beans>

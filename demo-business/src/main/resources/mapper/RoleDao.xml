<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hup.dao.RoleDao">

    <!--
        1.属性名,表名等用小写,select / from之类关键字用大写。
        2.<select>返回值尽量使用resultType，当实体属性名称与表中列名无法匹配时候，使用resultMap进行映射。
        3.不要用parameterType属性(多余)。
        4.一般情况下用#{},不要用${}。
        5.对做了分表分库后的数据集做查询操作时，不支持Join, 嵌套查询，order by, group by等操作。
        6.对SQL进行排版。
        7.建立索引，在数据量大的数据表中做查询的时候，对关键字段建立索引。（具体是否要加索引，请与数据组同事讨论）
          WHERE t.username = #{userName}
    -->
    <insert id="createRole" useGeneratedKeys="true" keyProperty="role.id">
        insert into sys_role
        (role, description, resource_ids, available)
         values
         (#{role.role}, #{role.description}, #{role.resourceIdsStr},#{role.available})
    </insert>

    <update id="updateRole">
        update sys_role set
        role =  #{role.organizationId},
        description = #{role.description},
        resource_ids = #{role.resourceIds},
        available = #{role.available},
        where id= #{role.id}
    </update>

    <delete id="deleteRole">
          delete from sys_role where id= #{roleId}
    </delete>

    <select id="findOne" resultType="com.hup.entity.Role">
        SELECT t.id, t.role, t.description, t.resource_ids as resourceIdsStr, t.available
        FROM sys_role t
        WHERE t.id = #{roleId}
    </select>

    <select id="findAll" resultType="com.hup.entity.Role">
        SELECT t.id, t.role, t.description, t.resource_ids as resourceIdsStr, t.available
        FROM sys_role t
    </select>

</mapper>
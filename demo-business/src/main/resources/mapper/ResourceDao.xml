<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hup.dao.ResourceDao">

    <!--
        1.属性名,表名等用小写,select / from之类关键字用大写。
        2.<select>返回值尽量使用resultType，当实体属性名称与表中列名无法匹配时候，使用resultMap进行映射。
        3.不要用parameterType属性(多余)。
        4.一般情况下用#{},不要用${}。
        5.对做了分表分库后的数据集做查询操作时，不支持Join, 嵌套查询，order by, group by等操作。
        6.对SQL进行排版。
        7.建立索引，在数据量大的数据表中做查询的时候，对关键字段建立索引。（具体是否要加索引，请与数据组同事讨论）
          WHERE t.username = #{userName}
    -->
    <insert id="createResource" useGeneratedKeys="true" keyProperty="resource.id">
        insert into sys_resource
        (name, type, url, parent_id, parent_ids, permission, available)
         values
         (#{resource.name}, #{resource.type}, #{resource.url}, #{resource.parentId},
          #{resource.parentIds}, #{resource.permission}, #{resource.available})
    </insert>

    <update id="updateResource">
        update sys_resource set
        name =  #{resource.name},
        type = #{resource.type},
        url = #{resource.url},
        parent_id = #{resource.parent_id},
        parent_ids = #{resource.parent_ids},
        permission = #{resource.permission},
        available = #{resource.available}
        where id= #{resource.id}
    </update>

    <delete id="deleteResource">
          delete from sys_resource where id= #{resourceId}
    </delete>

    <select id="findOne" resultType="com.hup.entity.Resource">
        SELECT t.id, t.name, t.type, t.url, t.parent_id, t.parent_ids, t.permission, t.available
        FROM sys_resource t
        WHERE t.id = #{resourceId}
    </select>

    <select id="findAll" resultType="com.hup.entity.Resource">
        SELECT t.id, t.name, t.type, t.url, t.parent_id, t.parent_ids, t.permission, t.available
        FROM sys_resource t
    </select>

</mapper>